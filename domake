#!/bin/bash
#
# Copyright (c) 2017-2018 GaÃ«l PORTAY <gael.portay@savoirfairelinux.com>
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the MIT License.
#

set -e

VERSION="1.0"

usage() {
	cat <<EOF
Usage: ${0##*/} [OPTIONS] [TARGET...]

Runs on top of make using dosh as default shell.

For a more thorough description of make, please refers to its help.

Options:
      -F or --dockerfile FILE   Path to the Dockerfile to use.
      -C or --directory DIR     Change to directory before doing anything else.
            --shell SHELL       Set shell interpretor.
                                Equivalent to set DOSHELL=/bin/sh.
      -V or --version           Print version.
      -h or --help              Print usage.
EOF
}

# Intercept -C option, and strip -F option
makeopts=()
doshopts=("--verbose")
shell_doshopts=()
while [ "$#" -ne 0 ]; do
	if [ "$1" = "-h" ] || [ "$1" = "--help" ]; then
		usage
		exit 0
	elif [ "$1" = "-V" ] || [ "$1" = "--version" ]; then
		echo "$VERSION"
		exit
	elif [ "$1" = "--shell" ]; then
		doshopts+=("--shell" "$2")
		shell_doshopts+=("--shell" "$2")
		shift
	elif [[ "$1" =~ ^DOSHELL=.* ]]; then
		eval "$1"
	elif [ "$1" = "-F" ] || [ "$1" = "--dockerfile" ]; then
		doshopts+=("--dockerfile" "$2")
		shift
	elif [ "$1" = "-C" ] || [ "$1" = "--directory" ]; then
		doshopts+=("--directory" "$2")
		makeopts+=("$1" "$2")
		shift
	else
		makeopts+=("$1")
	fi
	shift
done

# Create a container and remove it on exit
# shellcheck disable=SC2086
container="$(dosh "${doshopts[@]}" --detach)"
trap 'docker rm -f $container' 0

# Run make and set docker shell as default shell
set -- "${makeopts[@]}"
exec make SHELL="dosh ${shell_doshopts[*]} --exec $container" "$@"

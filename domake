#!/bin/bash
#
# Copyright 2017-2018,2020,2024 GaÃ«l PORTAY
#
# SPDX-License-Identifier: LGPL-2.1-or-later
#

set -e

VERSION="1"

usage() {
	cat <<EOF
Usage: ${0##*/} [OPTIONS] [TARGET...]

Runs on top of make using dosh as default shell.

For a more thorough description of make, please refers to its help.

Options:
      --dockerfile FILE         Path to the Dockerfile to use.
      -C or --directory DIR     Change to directory before doing anything else.
            --shell SHELL       Set shell interpretor.
                                Equivalent to set DOSHELL=<SHELL>.
      --version                 Print version.
      --help                    Print usage.

Environment variables:
      DOMAKE_DOCKER             The docker executable.

      DOSHELL                   The full pathname to the shell to run in docker
                                image.
                                Equivalent to --shell <SHELL>.
EOF
}

# Intercept -C option, and strip --dockerfile option
makeopts=()
docker=()
doshopts=("--verbose")
shell_doshopts=()
while [ "$#" -ne 0 ]
do
	if [ "$1" = "--help" ]
	then
		usage
		exit 0
	elif [ "$1" = "--version" ]
	then
		echo "$VERSION"
		exit
	elif [ "$1" = "--shell" ]
	then
		doshopts+=("--shell" "$2")
		shell_doshopts+=("--shell" "$2")
		shift
	elif [[ "$1" =~ ^DOSHELL=.* ]]
	then
		[[ "$1" =~ ^([^=]+)=(.*) ]]
		eval export "${BASH_REMATCH[1]}=\"${BASH_REMATCH[2]}\""
	elif [[ "$1" =~ ^DOMAKE_DOCKER=.* ]]
	then
		[[ "$1" =~ ^([^=]+)=(.*) ]]
		eval export "${BASH_REMATCH[1]}=\"${BASH_REMATCH[2]}\""
		read -r -a docker <<<"${DOMAKE_DOCKER:-docker}"
	elif [ "$1" = "--dockerfile" ]
	then
		doshopts+=("--dockerfile" "$2")
		shift
	elif [ "$1" = "-C" ] || [ "$1" = "--directory" ]
	then
		doshopts+=("--directory" "$2")
		makeopts+=("$1" "$2")
		shift
	else
		makeopts+=("$1")
	fi
	shift
done

# Create a container and remove it on exit
container="$(dosh "${doshopts[@]}" --detach)"
trap '"${docker[@]:-docker}" rm -f $container' 0

# Run make and set docker shell as default shell
set -- "${makeopts[@]}"
make SHELL="dosh ${shell_doshopts[*]} --exec $container" "$@"
